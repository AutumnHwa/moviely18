{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/Downloads/moviely15/src/pages/MvchoPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvchoPage.css';\nimport logoImage from '../logo.png';\nimport { useAuth } from '../context/AuthContext'; // AuthContext import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MvchoPage() {\n  _s();\n  const {\n    authToken,\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const genreMapping = useMemo(() => ({\n    '장르 전체': 'All',\n    '액션': '28',\n    '모험': '12',\n    '애니메이션': '16',\n    '코미디': '35',\n    '범죄': '80',\n    '다큐멘터리': '99',\n    '드라마': '18',\n    '가족': '10751',\n    '판타지': '14',\n    '역사': '36',\n    '공포': '27',\n    '음악': '10402',\n    '미스터리': '9648',\n    '로맨스': '10749',\n    'SF': '878',\n    'TV 영화': '10770',\n    '스릴러': '53',\n    '전쟁': '10752',\n    '서부': '37'\n  }), []);\n  const genres = useMemo(() => Object.keys(genreMapping), [genreMapping]);\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        console.log('Fetching movies...');\n        let url = 'https://moviely.duckdns.org/api/movies?size=1000';\n        if (selectedGenre !== '장르 전체') {\n          url = `https://moviely.duckdns.org/api/movies?genre=${genreMapping[selectedGenre]}`;\n        }\n        const response = await fetch(url, {\n          mode: 'cors'\n        });\n        console.log('API 요청 성공:', response);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log('API 응답 데이터:', data);\n        if (data && data.content) {\n          const processedData = data.content.map(movie => ({\n            ...movie,\n            flatrate: movie.flatrate ? movie.flatrate.split(', ') : [],\n            genre: movie.genre ? movie.genre.split(', ') : [] // 장르 필드를 배열로 변환\n          })).sort((a, b) => b.popularity - a.popularity); // 인기도를 기준으로 정렬\n\n          setMovies(processedData);\n          console.log('Processed Data:', processedData);\n        } else {\n          console.error('Unexpected response format:', data);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [selectedGenre]); // selectedGenre가 변경될 때마다 fetchMovies 호출\n\n  const banners = movies.map((movie, index) => /*#__PURE__*/_jsxDEV(MvBanner, {\n    title: movie.title,\n    poster: movie.poster_path,\n    flatrate: movie.flatrate.join(', '),\n    rating: Math.round(movie.vote_average / 2),\n    movieId: movie.id || movie.movie_id // 영화 ID 전달 (영화 ID가 'id' 또는 'movie_id'인지 확인)\n    ,\n    userId: user === null || user === void 0 ? void 0 : user.id // 사용자 ID 전달\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this));\n  const handleAuthButtonClick = () => {\n    if (authToken) {\n      logout();\n    } else {\n      navigate('/login');\n    }\n  };\n  const handleMyPageClick = () => {\n    if (authToken) {\n      navigate('/my/watched');\n    } else {\n      navigate('/login');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MvchoPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"pageHeader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"authButtons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mypageButton\",\n          onClick: handleMyPageClick,\n          children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"authButton\",\n          onClick: handleAuthButtonClick,\n          children: authToken ? '로그아웃' : '로그인'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImage,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainText\",\n      children: \"\\uC7AC\\uBBF8\\uC788\\uAC8C \\uBD24\\uAC70\\uB098 \\uB208\\uAE38\\uC774 \\uAC00\\uB294 \\uC601\\uD654\\uB4E4\\uC744 \\uD3C9\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subText\",\n      children: \"\\uCC1C\\uD55C \\uC601\\uD654\\uB4E4\\uC744 \\uBC14\\uD0D5\\uC73C\\uB85C MOVIELY\\uAC00 \\uCDE8\\uD5A5\\uC800\\uACA9 \\uC601\\uD654\\uB4E4\\uC744 \\uCD94\\uCC9C\\uD574 \\uB4DC\\uB824\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stickyTop\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/recommendations\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"recommendButton\",\n          children: \"\\uC601\\uD654 \\uCD94\\uCC9C \\uBC1B\\uAE30 >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"genreButtons\",\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `genreButton1 ${selectedGenre === genre ? 'active' : ''}`,\n          onClick: () => setSelectedGenre(genre),\n          children: genre\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bannerGrid\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"\\uB85C\\uB529 \\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 20\n      }, this) : banners.length > 0 ? banners : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noMovies\",\n        children: \"\\uC120\\uD0DD\\uD558\\uC2E0 \\uC7A5\\uB974\\uC758 \\uC601\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 93\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(MvchoPage, \"wczYfkqX1DBpsi4dT9MeMIsEtIQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = MvchoPage;\nexport default MvchoPage;\nvar _c;\n$RefreshReg$(_c, \"MvchoPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Link","useNavigate","MvBanner","logoImage","useAuth","jsxDEV","_jsxDEV","MvchoPage","_s","authToken","user","logout","navigate","genreMapping","genres","Object","keys","selectedGenre","setSelectedGenre","movies","setMovies","loading","setLoading","fetchMovies","console","log","url","response","fetch","mode","ok","Error","status","data","json","content","processedData","map","movie","flatrate","split","genre","sort","a","b","popularity","error","banners","index","title","poster","poster_path","join","rating","Math","round","vote_average","movieId","id","movie_id","userId","fileName","_jsxFileName","lineNumber","columnNumber","handleAuthButtonClick","handleMyPageClick","className","children","onClick","to","src","alt","length","_c","$RefreshReg$"],"sources":["/Users/autumn/Downloads/moviely15/src/pages/MvchoPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport MvBanner from './MvBanner';\nimport '../css/MvchoPage.css';\nimport logoImage from '../logo.png';\nimport { useAuth } from '../context/AuthContext'; // AuthContext import\n\nfunction MvchoPage() {\n  const { authToken, user, logout } = useAuth(); \n  const navigate = useNavigate();\n  const genreMapping = useMemo(() => ({\n    '장르 전체': 'All',\n    '액션': '28',\n    '모험': '12',\n    '애니메이션': '16',\n    '코미디': '35',\n    '범죄': '80',\n    '다큐멘터리': '99',\n    '드라마': '18',\n    '가족': '10751',\n    '판타지': '14',\n    '역사': '36',\n    '공포': '27',\n    '음악': '10402',\n    '미스터리': '9648',\n    '로맨스': '10749',\n    'SF': '878',\n    'TV 영화': '10770',\n    '스릴러': '53',\n    '전쟁': '10752',\n    '서부': '37'\n  }), []);\n\n  const genres = useMemo(() => Object.keys(genreMapping), [genreMapping]);\n  const [selectedGenre, setSelectedGenre] = useState('장르 전체');\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        console.log('Fetching movies...');\n        let url = 'https://moviely.duckdns.org/api/movies?size=1000';\n        if (selectedGenre !== '장르 전체') {\n          url = `https://moviely.duckdns.org/api/movies?genre=${genreMapping[selectedGenre]}`;\n        }\n\n        const response = await fetch(url, { mode: 'cors' });\n        console.log('API 요청 성공:', response);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('API 응답 데이터:', data);\n\n        if (data && data.content) {\n          const processedData = data.content.map(movie => ({\n            ...movie,\n            flatrate: movie.flatrate ? movie.flatrate.split(', ') : [],\n            genre: movie.genre ? movie.genre.split(', ') : [] // 장르 필드를 배열로 변환\n          })).sort((a, b) => b.popularity - a.popularity); // 인기도를 기준으로 정렬\n          \n          setMovies(processedData);\n          console.log('Processed Data:', processedData); \n        } else {\n          console.error('Unexpected response format:', data);\n        }\n\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [selectedGenre]); // selectedGenre가 변경될 때마다 fetchMovies 호출\n\n  const banners = movies.map((movie, index) => (\n    <MvBanner\n      key={index}\n      title={movie.title}\n      poster={movie.poster_path}\n      flatrate={movie.flatrate.join(', ')}\n      rating={Math.round(movie.vote_average / 2)}\n      movieId={movie.id || movie.movie_id} // 영화 ID 전달 (영화 ID가 'id' 또는 'movie_id'인지 확인)\n      userId={user?.id} // 사용자 ID 전달\n    />\n  ));\n\n  const handleAuthButtonClick = () => {\n    if (authToken) {\n      logout();\n    } else {\n      navigate('/login');\n    }\n  };\n\n  const handleMyPageClick = () => {\n    if (authToken) {\n      navigate('/my/watched');\n    } else {\n      navigate('/login');\n    }\n  };\n\n  return (\n    <div className=\"MvchoPage\">\n      <header className=\"pageHeader\">\n        <div className=\"authButtons\">\n          <button className=\"mypageButton\" onClick={handleMyPageClick}>\n            마이페이지\n          </button>\n          <button className=\"authButton\" onClick={handleAuthButtonClick}>\n            {authToken ? '로그아웃' : '로그인'}\n          </button>\n        </div>\n        <Link to=\"/\" className=\"logo\">\n          <img src={logoImage} alt=\"Logo\" />\n        </Link>\n      </header>\n      <div className=\"mainText\">재미있게 봤거나 눈길이 가는 영화들을 평가해주세요.</div>\n      <div className=\"subText\">찜한 영화들을 바탕으로 MOVIELY가 취향저격 영화들을 추천해 드려요.</div>\n      <div className=\"stickyTop\">\n        <Link to=\"/recommendations\">\n          <button className=\"recommendButton\">영화 추천 받기 &gt;</button>\n        </Link>\n        <div className=\"genreButtons\">\n          {genres.map((genre) => (\n            <button\n              key={genre}\n              className={`genreButton1 ${selectedGenre === genre ? 'active' : ''}`}\n              onClick={() => setSelectedGenre(genre)}\n            >\n              {genre}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"bannerGrid\">\n        {loading ? <div className=\"loading\">로딩 중...</div> : (banners.length > 0 ? banners : <div className=\"noMovies\">선택하신 장르의 영화가 없습니다.</div>)}\n      </div>\n    </div>\n  );\n}\n\nexport default MvchoPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,sBAAsB;AAC7B,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,OAAO,QAAQ,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC,SAAS;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC7C,MAAMQ,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,YAAY,GAAGd,OAAO,CAAC,OAAO;IAClC,OAAO,EAAE,KAAK;IACd,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,IAAI;IACb,KAAK,EAAE,IAAI;IACX,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,IAAI;IACb,KAAK,EAAE,IAAI;IACX,IAAI,EAAE,OAAO;IACb,KAAK,EAAE,IAAI;IACX,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,OAAO;IACb,MAAM,EAAE,MAAM;IACd,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,KAAK;IACX,OAAO,EAAE,OAAO;IAChB,KAAK,EAAE,IAAI;IACX,IAAI,EAAE,OAAO;IACb,IAAI,EAAE;EACR,CAAC,CAAC,EAAE,EAAE,CAAC;EAEP,MAAMe,MAAM,GAAGf,OAAO,CAAC,MAAMgB,MAAM,CAACC,IAAI,CAACH,YAAY,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EACvE,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,OAAO,CAAC;EAC3D,MAAM,CAACsB,MAAM,EAAEC,SAAS,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMyB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BD,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACFE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjC,IAAIC,GAAG,GAAG,kDAAkD;QAC5D,IAAIT,aAAa,KAAK,OAAO,EAAE;UAC7BS,GAAG,GAAI,gDAA+Cb,YAAY,CAACI,aAAa,CAAE,EAAC;QACrF;QAEA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;UAAEG,IAAI,EAAE;QAAO,CAAC,CAAC;QACnDL,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEE,QAAQ,CAAC;QAEnC,IAAI,CAACA,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBJ,QAAQ,CAACK,MAAO,EAAC,CAAC;QAC3D;QAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCV,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEQ,IAAI,CAAC;QAEhC,IAAIA,IAAI,IAAIA,IAAI,CAACE,OAAO,EAAE;UACxB,MAAMC,aAAa,GAAGH,IAAI,CAACE,OAAO,CAACE,GAAG,CAACC,KAAK,KAAK;YAC/C,GAAGA,KAAK;YACRC,QAAQ,EAAED,KAAK,CAACC,QAAQ,GAAGD,KAAK,CAACC,QAAQ,CAACC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;YAC1DC,KAAK,EAAEH,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACG,KAAK,CAACD,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;UACpD,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,UAAU,GAAGF,CAAC,CAACE,UAAU,CAAC,CAAC,CAAC;;UAEjDzB,SAAS,CAACgB,aAAa,CAAC;UACxBZ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEW,aAAa,CAAC;QAC/C,CAAC,MAAM;UACLZ,OAAO,CAACsB,KAAK,CAAC,6BAA6B,EAAEb,IAAI,CAAC;QACpD;QAEAX,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOwB,KAAK,EAAE;QACdtB,OAAO,CAACsB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CxB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,aAAa,CAAC,CAAC,CAAC,CAAC;;EAErB,MAAM8B,OAAO,GAAG5B,MAAM,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEU,KAAK,kBACtC1C,OAAA,CAACJ,QAAQ;IAEP+C,KAAK,EAAEX,KAAK,CAACW,KAAM;IACnBC,MAAM,EAAEZ,KAAK,CAACa,WAAY;IAC1BZ,QAAQ,EAAED,KAAK,CAACC,QAAQ,CAACa,IAAI,CAAC,IAAI,CAAE;IACpCC,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACjB,KAAK,CAACkB,YAAY,GAAG,CAAC,CAAE;IAC3CC,OAAO,EAAEnB,KAAK,CAACoB,EAAE,IAAIpB,KAAK,CAACqB,QAAS,CAAC;IAAA;IACrCC,MAAM,EAAElD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEgD,EAAG,CAAC;EAAA,GANbV,KAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOX,CACF,CAAC;EAEF,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAIxD,SAAS,EAAE;MACbE,MAAM,CAAC,CAAC;IACV,CAAC,MAAM;MACLC,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,MAAMsD,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIzD,SAAS,EAAE;MACbG,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,MAAM;MACLA,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,oBACEN,OAAA;IAAK6D,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB9D,OAAA;MAAQ6D,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B9D,OAAA;QAAK6D,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B9D,OAAA;UAAQ6D,SAAS,EAAC,cAAc;UAACE,OAAO,EAAEH,iBAAkB;UAAAE,QAAA,EAAC;QAE7D;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1D,OAAA;UAAQ6D,SAAS,EAAC,YAAY;UAACE,OAAO,EAAEJ,qBAAsB;UAAAG,QAAA,EAC3D3D,SAAS,GAAG,MAAM,GAAG;QAAK;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN1D,OAAA,CAACN,IAAI;QAACsE,EAAE,EAAC,GAAG;QAACH,SAAS,EAAC,MAAM;QAAAC,QAAA,eAC3B9D,OAAA;UAAKiE,GAAG,EAAEpE,SAAU;UAACqE,GAAG,EAAC;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACT1D,OAAA;MAAK6D,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAA4B;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5D1D,OAAA;MAAK6D,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAwC;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvE1D,OAAA;MAAK6D,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB9D,OAAA,CAACN,IAAI;QAACsE,EAAE,EAAC,kBAAkB;QAAAF,QAAA,eACzB9D,OAAA;UAAQ6D,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAa;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACP1D,OAAA;QAAK6D,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BtD,MAAM,CAACuB,GAAG,CAAEI,KAAK,iBAChBnC,OAAA;UAEE6D,SAAS,EAAG,gBAAelD,aAAa,KAAKwB,KAAK,GAAG,QAAQ,GAAG,EAAG,EAAE;UACrE4B,OAAO,EAAEA,CAAA,KAAMnD,gBAAgB,CAACuB,KAAK,CAAE;UAAA2B,QAAA,EAEtC3B;QAAK,GAJDA,KAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKJ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN1D,OAAA;MAAK6D,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxB/C,OAAO,gBAAGf,OAAA;QAAK6D,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GAAIjB,OAAO,CAAC0B,MAAM,GAAG,CAAC,GAAG1B,OAAO,gBAAGzC,OAAA;QAAK6D,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAkB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxD,EAAA,CA5IQD,SAAS;EAAA,QACoBH,OAAO,EAC1BH,WAAW;AAAA;AAAAyE,EAAA,GAFrBnE,SAAS;AA8IlB,eAAeA,SAAS;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}